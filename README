Boost.NumPy is an extension for Boost.Python that adds NumPy support.

It is intended as a replacement for the old numeric support in
Boost.Python proper, which is now out-of-date and does not support
C/C++ pointer access to the data.  Because it builds against the NumPy
headers and hence has a dependency that Boost.Python does not, it is
intended to be built as a separate library.  This is also not intended
to be a high-level C++ array library; it would be more accurate to
consider it a C++ NumPy API, with the intent of making the NumPy C-API
available in a form that is safer and more convenient for C++ users
(and particularly those using Boost.Python, of course).

THIS IS NOT AN OFFICIAL BOOST LIBRARY

...we're just calling it Boost.NumPy right now because that clearly
indicates that it's for Boost.Python and NumPy.  We do intend to
propose it for inclusion in Boost eventually.


INSTALLATION

We have provided both a Boost.Build and an SCons build system.  At
the moment, we recommend using the latter.  Building should be as
simple as running "scons" and "scons install", but you may need
to use the "--with-boost*" options (see "scons --help") to specify
where to find Boost.  The Python that is used by SCons will
be the one built against.

INSTALLATION ON WINDOWS (tested with msvc 2010 and boost 1.52.0)
To install on windows we will use the boost build script. The idea is to 
patch a boost install with the boost numpy library as if it was included 
in boost.
	
	1. Download boost and extract to say c:\boost	
	2. cd c:\boost	
	3. call bootstrap.bat	
	4. copy the libs\numpy directory in c:\boost\libs
	5. copy the boost\numpy.hpp and boost\numpy in c:\boost\boost
	6. call:
	   bjam bjam --with-python --with-numpy variant=debug,release 
	   link=static include=C:\Python27\Lib\site-packages\numpy\core\include stage
	   The include for the numpy includes might not be necessary as the jamscript 
	   is supposed to detect the headers location automatically. NOTE: link=static
	   is required on windows since there are no exported symbols in boost numpy.
	7. The generated static libraries will be located in the c:\boost\stage.
	   
	
DOCUMENTATION

More documentation on how to use the library can be found in
libs/numpy/doc, but it may be most useful to start with the
examples in libs/numpy/examples.  The headers files are also
well documented and are intended to serve as a reference.


ISSUES AND NEW FEATURES

Please create an issue on the GitHub site at:

https://github.com/ndarray/Boost.NumPy/issues


CONTACT

Please send email questions to:

ndarray-dev@googlegroups.com

...but I would prefer bug reports and feature requests to go to
the GitHub issues list (see above).


MULTI-PLATFORM SUPPORT

The vast majority of development has happened on Linux/g++, and while
we have taken some steps to support MacOS/clang, there hasn't been
much testing.  There has been no testing on Windows, though we have
no reason to believe anything we've done won't work on Windows.

In short, we'd really love to have some testing on additional platforms,
especially from people who know their way around SCons, NumPy, or
Boost.Python.


HISTORY/AUTHORS

Boost.NumPy was originally written by Jim Bosch as part of the
"ndarray" C++ library, then reorganized into a standalone component,
cleaned up, and documented as part of a Boost-sponsored
Google Summer of Code by Ankit Daftery, mentored by Stefan Seefeld.

The project is hosted both on the Boost Sandbox:

https://svn.boost.org/svn/boost/sandbox/numpy

and on GitHub:

https://github.com/ndarray/Boost.NumPy